# This script is created by NSG2 beta1
# <http://wushoupong.googlepages.com/nsg>
#===================================
# Simulation parameters setup
#===================================
set val(chan) Channel/WirelessChannel ;# channel type
set val(prop) Propagation/TwoRayGround ;# radio-propagation model
set val(netif) Phy/WirelessPhy ;# network interface type
set val(mac) Mac/802_11 ;# MAC type
set val(ifq) Queue/DropTail/PriQueue ;# interface queue type
set val(ll) LL ;# link layer type
set val(ant) Antenna/OmniAntenna ;# antenna model
set val(ifqlen) 50 ;# max packet in ifq
set val(nn) 8 ;# number of mobilenodes
set val(rp) AODV ;# routing protocol
set val(x) 1102 ;# X dimension of topography
set val(y) 717 ;# Y dimension of topography
set val(stop) 10.0 ;# time of simulation end
#===================================
# Initialization
#===================================
#Create a ns simulator
set ns [new Simulator]
#Setup topography object
set topo [new Topography]
$topo load_flatgrid $val(x) $val(y)
create-god $val(nn)
#Open the NS trace file
set tracefile [open out1.tr w]
$ns trace-all $tracefile
#Open the NAM trace file
set namfile [open out1.nam w]
$ns namtrace-all $namfile
$ns namtrace-all-wireless $namfile $val(x) $val(y) set chan [new $val(chan)];#Create wireless channel
#=================================== # Mobile node parameter setup
#=================================== $ns node-config -adhocRouting $val(rp) \ -llType $val(ll)
\
-macType $val(mac) \
-ifqType $val(ifq) \
-ifqLen $val(ifqlen) \
-antType $val(ant) \
-propType $val(prop) \
-phyType $val(netif) \
-channel $chan \
-topoInstance $topo \
-agentTrace ON \
-routerTrace ON \
-macTrace ON \
-movementTrace ON
#=================================== # Nodes Definition
#=================================== #Create 8 nodes
set n0 [$ns node]
$n0 set X_ 198
$n0 set Y_ 344
$n0 set Z_ 0.0
$ns initial_node_pos $n0 20
set n1 [$ns node]
$n1 set X_ 321
$n1 set Y_ 481
$n1 set Z_ 0.0
$ns initial_node_pos $n1 20
set n2 [$ns node]
$n2 set X_ 469
$n2 set Y_ 312
$n2 set Z_ 0.0
$ns initial_node_pos $n2 20
set n3 [$ns node]
$n3 set X_ 738
$n3 set Y_ 297
$n3 set Z_ 0.0
$ns initial_node_pos $n3 20
set n4 [$ns node]
$n4 set X_ 815
$n4 set Y_ 466
$n4 set Z_ 0.0
$ns initial_node_pos $n4 20
set n5 [$ns node]
$n5 set X_ 1002
$n5 set Y_ 334
$n5 set Z_ 0.0
$ns initial_node_pos $n5 20
set n6 [$ns node]
$n6 set X_ 479
$n6 set Y_ 617
$n6 set Z_ 0.0
$ns initial_node_pos $n6 20
set n7 [$ns node]
$n7 set X_ 613
$n7 set Y_ 577
$n7 set Z_ 0.0
$ns initial_node_pos $n7 20
#=================================== # Agents Definition
#=================================== #Setup a TCP connection
set tcp0 [new Agent/TCP]
$ns attach-agent $n0 $tcp0
set sink2 [new Agent/TCPSink]
$ns attach-agent $n3 $sink2
$ns connect $tcp0 $sink2
$tcp0 set packetSize_ 1500
#Setup a UDP connection
set udp3 [new Agent/UDP]
$ns attach-agent $n2 $udp3
set null4 [new Agent/Null]
$ns attach-agent $n5 $null4
$ns connect $udp3 $null4
$udp3 set packetSize_ 1500
#=================================== # Applications Definition
#===================================
#Setup a FTP Application over TCP connection set ftp0 [new Application/FTP]
$ftp0 attach-agent $tcp0
$ns at 1.0 "$ftp0 start"
$ns at 2.0 "$ftp0 stop"
#Setup a CBR Application over UDP connection set cbr1 [new Application/Traffic/CBR] $cbr1 attach-agent
$udp3
$cbr1 set packetSize_ 1000
$cbr1 set rate_ 1.0Mb
$cbr1 set random_ null
$ns at 1.0 "$cbr1 start"
$ns at 2.0 "$cbr1 stop"
#=================================== # Termination
#=================================== #Define a 'finish' procedure
proc finish {} {
global ns tracefile namfile
$ns flush-trace
close $tracefile
close $namfile
exec nam out1.nam &
exit 0
}
for {set i 0} {$i < $val(nn) } { incr i } { $ns at $val(stop) "\$n$i reset"
}
$ns at $val(stop) "$ns nam-end-wireless $val(stop)" $ns at $val(stop) "finish"
$ns at $val(stop) "puts \"done\" ; $ns halt" $ns run




AWK file

BEGIN{
count1=0
count2=0
pack1=0
pack2=0
time1=0
time2=0
}
{
if($1 == "r" && $3 == "_3_" && $4 == "RTR") {
count1++
pack1=pack1+$8
time1=$2
}
if($1 == "r" && $3 == "_5_" && $4 =="RTR")
{
count2++
pack2=pack2+$8
time2=$2
}
}
END{
printf("The Throughput from n0 to n3: %f Mbps \n",
((count1*pack1*8)/(time1*1000000)));
printf("The Throughput from n2 to n5: %f Mbps \n",
((count2*pack2*8)/(time2*1000000)));
}
